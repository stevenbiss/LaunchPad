1. Recommended step: Edit manifest.json file to limit domains that extension executes on. Edit the line:
		"matches": [ "*://*/*" ],
	To for example:
		"matches": [ "*://*.hostname.com/*" ],

2. Edit the content.js file to use one of your Launch Development libraries. Edit the paramter value to a .js file on line:
		headerscript.src = "https://assets.adobedtm.com/<YOUR DEV LIBRARY>";
	For example:
		headerscript.src = "https://assets.adobedtm.com/launch-EN7633bef957gd66r6f438ce8d863f5bfbb3-development.min.js";

3. Open Chrome
4. Enter "chrome://extensions/" in the URL bar
5. Drag full LaunchPad folder onto open extensions tab.
6. Developer mode (tick box) will need to be enabled to use the extension as it has not been installed from the Chrome Store.
7. Use the DTM Debugger extension from Search Discovery to run it in Debug mode - it should find the container next time you reload the page.
8. TIP: In Adobe Launch create a Rule that only fires for the domain you wish to demo on. That way you can use the same container and Extension setup for all demos without having to re-build each time.

Copy entire folder and repeat the above for as many unique Launch libraries & domains as required.
Recommend renaming folder to "launchpad-injector-<clientName>" for each instance.

This tool should be useful for:

	1.	Testing Launch rules being built before client has dropped container into their site
	2.	Testing/experimenting your own library version of rules before building them into the client staging instance.
	3.  Demos and workshops with clients where they can install and use Launch on their own live website.
